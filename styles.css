/*Se resetea todo el documento html a border-box*/
html {
    box-sizing: border-box;
}

/*Todo el body tendrá esta configuración*/
body {
    font-family: sans-serif;
    color: #0a0a23;
}

/*Puedes usar CSS para hacer que los elementos con esta clase estén completamente ocultos de la página visual, pero que sigan siendo anunciados por los lectores de pantalla.

El CSS que está a punto de escribir es un conjunto común de propiedades utilizadas para asegurar que los elementos estén completamente ocultos visualmente.*/

/*Seleccionará cualquier elemento span que su clase incluya sr-only*/
span[class~="sr-only"] {
    border: 0 !important;
    /*La propiedad CSS clip se utiliza para definir la visibilidad de las partes de un elemento.*/
    clip: rect(1px, 1px, 1px, 1px) !important; /*Recorta el elemento a un rectángulo de 1 píxel*/
    /*La propiedad clip-path determina la forma que la propiedad clip debe tomar.*/
    clip-path: inset(50%) !important; /*forma la región de recorte en un rectángulo dentro del elemento.*/
    width: 1px !important;
    height: 1px !important;
    overflow: hidden !important;
    white-space: nowrap !important; /*Evitan que el contenido del texto se desborde*/
    position: absolute !important;
    padding: 0 !important;
    margin: -1px !important;
    /*En lugar de tener que revisar constantemente que no sobrescribas tus propiedades, puedes usar la palabra clave !important para asegurar que esas propiedades siempre serán aplicadas, sin importar el orden o la especificidad.*/
}

/*Estilos para el encabezado de la tabla*/
h1 {
    max-width: 37.25rem;
    margin: 0 auto;
    padding: 1.5rem 1.25rem;
}

/*esto mostrara los elementos anidados del fondo en la parte superior. */
h1 .flex {
    display: flex;
    flex-direction: column-reverse;
    gap: 1rem;
}

/*El pseudo-selector :first-of-type se utiliza para apuntar al primer elemento que coincida con el selector.*/
h1 .flex span:first-of-type {
    font-size: 0.7em;
}

/*El pseudo-selector :last-of-type hace exactamente lo contrario - apunta al último elemento que coincida con el selector.*/
h1 .flex span:last-of-type {
    font-size: 1.2em;
}

section  {
    max-width: 40rem;
    margin: 0 auto;
    border: 2px solid #d0d0d5;
}

#years {
    display: flex; /*Alinear en fila o columna*/
    justify-content: flex-end; /*Alinea al final del contenedor*/
    position: sticky; /*Posiciona el elemento fijamente*/
    top: 0; /*FIja en la parte superior*/
    color: #fff;
    background-color: #0a0a23;
    margin: 0 -2px;
    padding: 0.5rem calc(1.25rem + 2px) 0.5rem 0; /*La función calc() es una función CSS que te permite calcular un valor basado en otros valores. Por ejemplo, lo puedes usar para calcular el ancho del viewport menos el margen de un elemento*/
    z-index: 999;
}

/*La sintaxis span[class] apuntará a cualquier elemento span que tenga un atributo class, independientemente del valor del atributo.*/
#years span[class] {
    font-weight: bold;
    width: 4.5rem;
    text-align: right;
}

.table-wrap {
    padding: 0 0.75rem 1.5rem 0.75rem;
}

/*El pseudo-selector :not() se utiliza para apuntar a todos los elementos que no coinciden con el selector - en este caso, cualquiera de tus elementos span que no tengan la clase sr-only, Esto asegura que tus reglas anteriores para el selector span[class~="sr-only"] no se sobreescriban.*/
/*span:not(.sr-only) {
    font-weight: normal;
}*/
/*Ahora que se agregó important se puede eliminar :not(sr-only)*/

table {
    /*permitirá que los bordes de las celdas se contraigan en un solo borde, en lugar de un borde alrededor de cada celda.*/
    border-collapse: collapse;
    border: 0;
    width: 100%; /*Llena su contenedor*/
    position: relative; /*Posiciona el elemento de manera relativa a su contenedor*/
    margin-top: 3rem; /*Espacio entre el encabezado y la tabla*/
}

table caption {
    color: #356eaf;
    font-size: 1.3em;
    font-weight: normal;
    position: absolute; /*Posiciona el elemento de manera absoluta*/
    top: -2.25rem; /*Espacio entre encabezado y tabla*/
    left: 0.5rem; /*Espacio entre borde y tabla*/
}

tbody td { /*Selecciona todas las celdas de la tabla*/
    width: 100vw; /*Llena su contenedor*/
    min-width: 4rem;
    max-width: 4rem;
}

tbody th { 
    width: calc(100% - 12rem) /*Resta el ancho de las celdas de la tabla al ancho total de la tabla*/
}

tr[class="total"] { /*Selecciona la fila con la clase total*/
    border-bottom: 4px double #0a0a23; 
    font-weight: bold; 
}

tr[class="total"] th { /*Selecciona la celda de la fila con la clase total*/
    text-align: left;
    padding: 0.5rem 0 0.25rem 0.5rem;
  }

  /*La diferencia clave entre tr[class="total"] y tr.total es que el primero seleccionara los elementos tr donde la única clase sea total. El segundo seleccionará todos los elementos tr donde la clase sea total.*/

tr.total td {
    text-align: right;
    padding: 0 0.25rem;
}

/*El pseudo-selector :nth-of-type() se utiliza para apuntar a elementos específicos en función de su orden entre los hermanos del mismo tipo.*/

tr.total td:nth-of-type(3) { /*Selecciona la tercera celda de la fila con la clase total*/
    padding-right: 0.5rem;
}

tr.total:hover {
    background-color: #99c9ff
}

td[class="current"] {
    font-style: italic;
}

tr[class="data"] {
    background-image: linear-gradient(to bottom, #dfdfe2 1.845rem, white 1.845rem);
}

tr.data th {
    text-align: left;
    padding-top: 0.3rem;
    padding-left: 0.5rem;
}

tr.data th .description {
    display:block;
    font-style: italic;
    font-weight: normal;
    padding: 1rem 0 0.75rem;
    margin-right: -13.5rem;
}

tr.data td {
    vertical-align: top;
    text-align: right;
    padding: 0.3rem 0.25rem 0
}

tr.data td:last-of-type {
    padding-right: 0.5rem;
}